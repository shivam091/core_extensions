var search_data = {"index":{"searchIndex":["array","hash","module","nilclass","object","average()","blank?()","deep_send()","duplicates()","has_keys?()","in_namespace?()","include_all?()","include_any?()","include_none?()","includes_index?()","is_one_of?()","keys?()","keys_at()","mean()","namespaces()","round()","slice!()","stddev()","take!()","variance()"],"longSearchIndex":["array","hash","module","nilclass","object","array#average()","nilclass#blank?()","object#deep_send()","array#duplicates()","hash#has_keys?()","object#in_namespace?()","array#include_all?()","array#include_any?()","array#include_none?()","array#includes_index?()","object#is_one_of?()","hash#keys?()","hash#keys_at()","array#mean()","module#namespaces()","array#round()","hash#slice!()","array#stddev()","array#take!()","array#variance()"],"info":[["Array","","Array.html","",""],["Hash","","Hash.html","",""],["Module","","Module.html","",""],["NilClass","","NilClass.html","",""],["Object","","Object.html","",""],["average","Array","Array.html#method-i-average","()",""],["blank?","NilClass","NilClass.html#method-i-blank-3F","()","<p>Returns <code>true</code> when invoked on ‘nil`.\n<p>Examples\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">nil</span>.<span class=\"ruby-identifier\">blank?</span> <span class=\"ruby-comment\">#=&gt; true</span>\n</pre>\n"],["deep_send","Object","Object.html#method-i-deep_send","(*args)","<p>Invokes the specified methods continuously, unless encountering a <code>nil</code> value.\n<p>Examples\n\n<pre class=\"ruby\"><span class=\"ruby-value\">10</span>.<span class=\"ruby-identifier\">deep_send</span>(<span class=\"ruby-string\">&quot;to_s.length&quot;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["duplicates","Array","Array.html#method-i-duplicates","()","<p>Returns an array of the duplicate elements.\n<p>Examples\n\n<pre>[1, 2, 3, 2, 4, 1, 5].duplicates #=&gt; [1, 2]\n[1, 2, ...</pre>\n"],["has_keys?","Hash","Hash.html#method-i-has_keys-3F","(*keys)",""],["in_namespace?","Object","Object.html#method-i-in_namespace-3F","(val)","<p>Returns whether or not the object is in the given namespace.\n<p>Arguments\n<p><code>val</code> - The object to be checked in …\n"],["include_all?","Array","Array.html#method-i-include_all-3F","(*elements)","<p>Returns whether the array contains all of the <code>elements</code>.\n<p>Arguments\n<p><code>elements</code> - <code>elements</code> that needs to be …\n"],["include_any?","Array","Array.html#method-i-include_any-3F","(*elements)","<p>Returns whether the array contains any of the <code>elements</code>.\n<p>Arguments\n<p><code>elements</code> - <code>elements</code> that needs to be …\n"],["include_none?","Array","Array.html#method-i-include_none-3F","(*elements)","<p>Returns whether the array contains none of the <code>elements</code>.\n<p>Arguments\n<p><code>elements</code> - <code>elements</code> that needs to be …\n"],["includes_index?","Array","Array.html#method-i-includes_index-3F","(index)","<p>Returns whether the array has a value at the specified <code>index</code>.\n<p>Arguments\n<p><code>index</code> - <code>index</code> that needs to be …\n"],["is_one_of?","Object","Object.html#method-i-is_one_of-3F","(*args)","<p>Returns <code>true</code> if the receiver object is an instance of at least one of the classes specified by <code>args</code>. …\n"],["keys?","Hash","Hash.html#method-i-keys-3F","(*keys)","<p>Returns whether the hash contains all of the specified <code>keys</code>. This method is similar to Hash#key?, but …\n"],["keys_at","Hash","Hash.html#method-i-keys_at","(*values)","<p>Returns the array of keys of an occurrence of given <code>values</code>. If the value is not found, returns empty …\n"],["mean","Array","Array.html#method-i-mean","()","<p>Returns the mean of the array of <code>Numeric</code>.\n<p>Examples\n\n<pre class=\"ruby\">[<span class=\"ruby-value\">1</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>, <span class=\"ruby-value\">4</span>, <span class=\"ruby-value\">5</span>].<span class=\"ruby-identifier\">mean</span> <span class=\"ruby-comment\">#=&gt; 3.0</span>\n[<span class=\"ruby-value\">1.0</span>, <span class=\"ruby-value\">2.0</span>, <span class=\"ruby-value\">3.0</span>].<span class=\"ruby-identifier\">mean</span> <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n"],["namespaces","Module","Module.html#method-i-namespaces","()","<p>Returns an <code>Array</code> with the namespaces to the current Module.\n<p>Examples\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Aaa</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Bbb</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Ccc</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Ddd</span>.<span class=\"ruby-identifier\">namespaces</span>     <span class=\"ruby-operator\">...</span>\n</pre>\n"],["round","Array","Array.html#method-i-round","(precision = 2)","<p>Rounds each element of the array up to specified <code>precision</code>.\n<p>If <code>precision</code> is <code>zero</code>, array elements will …\n"],["slice!","Hash","Hash.html#method-i-slice-21","(*keys)","<p>Alters the hash by keeping only specified ‘keys` and returns it. If the key is not present, returns empty …\n"],["stddev","Array","Array.html#method-i-stddev","()","<p>Returns the standard deviation of the array of <code>Numeric</code>.\n<p>Examples\n\n<pre class=\"ruby\">[<span class=\"ruby-value\">1</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>, <span class=\"ruby-value\">4</span>, <span class=\"ruby-value\">5</span>].<span class=\"ruby-identifier\">stddev</span> <span class=\"ruby-comment\">#=&gt; 1.4142135623730951 ...</span>\n</pre>\n"],["take!","Array","Array.html#method-i-take-21","(n)","<p>Alters the array by removing first <code>n</code> elements.\n<p>If a negative number is given, raises an <code>ArgumentError</code> …\n"],["variance","Array","Array.html#method-i-variance","()","<p>Returns the variance of the array of <code>Numeric</code>.\n<p>Examples\n\n<pre class=\"ruby\">[<span class=\"ruby-value\">1</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>, <span class=\"ruby-value\">4</span>, <span class=\"ruby-value\">5</span>].<span class=\"ruby-identifier\">variance</span> <span class=\"ruby-comment\">#=&gt; 2.0</span>\n[<span class=\"ruby-value\">1.0</span>, <span class=\"ruby-value\">2.0</span>, <span class=\"ruby-value\">3.0</span>].<span class=\"ruby-identifier\">variance</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"]]}}